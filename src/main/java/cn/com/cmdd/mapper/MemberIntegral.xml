<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.cmdd.dao.MemberIntegralDao">
	
	<insert id="insert" parameterType="MemberIntegral">

		<selectKey resultType="Long" order="BEFORE" keyProperty="id">
			SELECT COALESCE(#{id},UUID_SHORT()) AS id
		</selectKey>
		INSERT
		INTO Member_Integral(
			id,
			shop_id,
			consume_Money,
			consume_Integral,
			convert_Money,
			convert_Integral,
			sync_status
		)
		VALUES(
		COALESCE(/*TODO:#{id}可不要或者在代码里生成*/
			  #{id},UUID_SHORT()),
			  #{shopId},
			  #{consumeMoney},
			  #{consumeIntegral},
			  #{convertMoney},
			  #{convertIntegral},
			  #{sync_status}
		)
	</insert>

	<insert id="insertById" parameterType="MemberIntegral">
		INSERT INTO Member_Integral(
			id,
			shop_id,
			consume_Money,
			consume_Integral,
			convert_Money,
			convert_Integral,
			sync_status
		)
		VALUES(
			COALESCE(#{id},UUID_SHORT()),
			#{shopId},
			#{consumeMoney},
			#{consumeIntegral},
			#{convertMoney},
			#{convertIntegral},
			COALESCE(#{sync_status},sync_status)
		  	)
		ON DUPLICATE KEY
		UPDATE
			consume_Money = #{consumeMoney},
			consume_Integral = #{consumeIntegral},
			convert_Money = #{convertMoney},
			sync_status = #{sync_status},
			convert_integral = #{convertIntegral}
	</insert>

	<update id="update">
		UPDATE		
			Member_Integral
		SET
			consume_Money = #{consumeMoney},
			consume_Integral = #{consumeIntegral},	
			convert_Money = #{convertMoney},
			sync_status = #{sync_status},
			convert_integral = #{convertIntegral}
		WHERE
		    id = #{id}
	</update>
	
	
	<!-- 同步数据  -->
	<select id="selectByIsUpload" resultType="MemberIntegral">
		SELECT
			id,
			shop_id shopId,
			consume_money consumeMoney,
			consume_integral consumeIntegral,
			convert_Money convertMoney,
			convert_Integral convertIntegral,
			sync_status
		FROM 
			Member_Integral
		WHERE 
			shop_id = #{0} and sync_status = 0
	</select>


</mapper>




 