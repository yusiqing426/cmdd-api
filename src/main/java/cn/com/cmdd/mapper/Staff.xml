<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.cmdd.dao.StaffDao">

	<insert id="addStaff" parameterType="Staff">
		<selectKey resultType="Long" order="BEFORE" keyProperty="id">
			SELECT COALESCE(#{id},UUID_SHORT()) AS id
		</selectKey>
		INSERT INTO
		staff(id,shop_id,account,name,sex,phone,password,is_in_use,create_time,last_login_time,sync_status)
		VALUES(#{id},#{shop_id},#{account},#{name},#{sex},#{phone},#{password},#{is_in_use},now(),now(),COALESCE(#{sync_status},sync_status))
	</insert>

	<insert id="insertById" parameterType="Staff">
		INSERT INTO
		staff(id,shop_id,account,name,sex,phone,password,is_in_use,create_time,last_login_time,sync_status)
		VALUES(
		#{id},#{shop_id},#{account},#{name},#{sex},#{phone},#{password},#{is_in_use},now(),now(),COALESCE(#{sync_status},sync_status))
		ON DUPLICATE KEY
		UPDATE
		shop_id = COALESCE(#{shop_id},shop_id),
		account = COALESCE(#{account},account),
		name = COALESCE(#{name},name),
		sex = COALESCE(#{sex},sex),
		password = COALESCE(#{password},password),
		is_in_use = COALESCE(#{is_in_use},is_in_use),
		create_time= COALESCE(#{create_time},create_time),
		last_login_time=  COALESCE(#{last_login_time},last_login_time),
		sync_status = COALESCE(#{sync_status},sync_status)
	</insert>

	<delete id="deleteStaff">
		DELETE
		FROM staff
		WHERE id = #{id}
	</delete>

	<update id="updateStaff" parameterType="Staff">
		UPDATE staff s,user u
		SET
		s.shop_id = COALESCE(#{shop_id},s.shop_id),
		s.name=COALESCE(#{name},s.name),
		s.sex=COALESCE(#{sex},s.sex),
		s.phone = COALESCE(#{phone},s.phone),
		s.is_in_use=COALESCE(#{is_in_use},s.is_in_use),
		s.last_login_time=COALESCE(#{last_login_time},s.last_login_time),
		s.sync_status = COALESCE(#{sync_status},s.sync_status),
		u.user_key = COALESCE(#{user_key},u.user_key)

		WHERE s.account = u.account AND s.id = #{id}
	</update>

	<update id="updateStaffPassword">
		UPDATE staff
		SET
			password = #{1},
			sync_status = 0
		WHERE id = #{0}
	</update>

	<update id="updateShopPassword">
		UPDATE
		shop
		SET
		password = #{1},
		sync_status	=	0
		WHERE
		id = #{0}
	</update>

	<select id="getStaffListByShop_id" resultType="Staff">
		SELECT  s.id, 
				s.shop_id, 
				s.account, 
				s.name, 
				s.sex,
				s.phone,
				s.password, 
				s.is_in_use, 
				s.create_time, 
				s.last_login_time, 
				u.user_key AS user_key,
				u.sync_status
		FROM staff AS s INNER JOIN user AS u ON s.id = u.user_id
		
		WHERE s.shop_id = #{0}  AND s.account = u.account
		
	</select>

	<select id="getStaffList" resultType="Staff">
		SELECT * FROM staff ORDER BY id
	</select>

	<select id="getStaffById" resultType="Staff">
		SELECT  s.id, 
				s.shop_id, 
				s.account, 
				s.name,
				s.sex,
				s.phone, 
				s.password, 
				s.is_in_use, 
				s.create_time, 
				s.last_login_time, 
				u.user_key AS user_key,
				u.sync_status
		FROM staff AS s INNER JOIN user AS u ON s.id = u.user_id
		WHERE s.id = #{0} AND s.account = u.account
	</select>

	<!-- synchronous data  -->
	<select id="selectByIsUpload" resultType="staff">
		SELECT 
			id,
			shop_id,
			account,
			name,
			sex,
			phone,
			password,
			is_in_use,
			create_time,
			last_login_time,
			sync_status
		FROM 
			staff
		WHERE 
			shop_id = #{0} and sync_status = 0
	</select>
</mapper>




 